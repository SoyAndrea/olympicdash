{"title":"Olympic Games","markdown":{"yaml":{"title":"Olympic Games","format":{"dashboard":{"orientation":"columns","nav-buttons":["github"],"github":"https://github.com/posit-conf-2024/olympicdash","theme":["sketchy","style/olympicdash.scss"]}},"logo":"../images/olympics-logo.svg"},"headingText":"üåû Summer Olympics","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| message: false\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(scales)\n```\n\n```{r}\n#| label: load-data\n#| message: false\nolympics_full <- read_csv(\"../data/olympics.csv\")\n```\n\n```{r}\n#| label: prep-data\nolympics <- olympics_full |>\n  filter(!is.na(medal)) |>\n  separate_wider_delim(cols = team, names = c(\"team\", \"suffix\"), delim = \"-\", too_many = \"merge\", too_few = \"align_start\") |>\n  select(-suffix) |>\n  mutate(medal = fct_relevel(medal, \"Bronze\", \"Silver\", \"Gold\"))\n```\n\n\n```{r}\n#| label: prep-summmer-data\nsummer_olympics <- olympics |>\n  filter(season == \"Summer\")\n```\n\n## Column - Medals by sport and year {width=65%}\n\n### Row - Medals by sport {height=60%}\n\n```{r}\n#| title: Medals by sport\n#| fig-width: 8\n#| fig-height: 3\nsummer_olympics |>\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |>\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar(color = \"white\") +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 7000, 1000),\n    labels = label_number(big.mark = \",\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n\n### Row - Medals by year {height=40%}\n\n::: {.card title=\"Medals by year\"}\nDue to World War II, no olympic games were held in 1940 and 1944.\n\n```{r}\n#| title: Medals by year\n#| fig-width: 11\n#| fig-height: 2\nsummer_olympics |>\n  count(year, medal) |>\n  ggplot(aes(x = year, y = n, fill = medal)) +\n  geom_line(aes(color = medal), linewidth = 0.8) +\n  geom_point(size = 2, color = \"white\", shape = \"circle filled\") +\n  guides(\n    color = guide_legend(reverse = TRUE),\n    fill = guide_legend(reverse = TRUE)\n  ) +\n  scale_color_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +  \n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\",\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n:::\n\n## Column - Medals by country {width=35%}\n\n### Row - Value boxes {height=30%}\n\n```{r}\n#| label: summer-calculate-most-medals\nsummer_most_golds <- summer_olympics |>\n  filter(medal == \"Gold\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nsummer_most_silvers <- summer_olympics |>\n  filter(medal == \"Silver\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nsummer_most_bronzes <- summer_olympics |>\n  filter(medal == \"Bronze\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n```\n\n::: {.valuebox icon=\"award-fill\" color=\"#d4af37\"}\nMost golds: \n\n`{r} summer_most_golds$n`\n\n`{r} summer_most_golds$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#c0c0c0\"}\nMost silvers: \n\n`{r} summer_most_silvers$n`\n\n`{r} summer_most_silvers$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#cd7f32\"}\nMost bronzes: \n\n`{r} summer_most_bronzes$n`\n\n`{r} summer_most_bronzes$team`\n:::\n\n### Row - Tabsets of tables {height=70% .tabset}\n\n::: {.card title=\"Top 30 total medals\"}\nTeams sorted in descending order of total medals.\n\n```{r}\nsummer_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(desc(total), team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n```\n:::\n\n::: {.card title=\"Bottom 30 total medals\"}\nTeams sorted in ascending order of total medals.\n\n```{r}\n#| title: Bottom 30 total medals\nsummer_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(total, team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n```\n:::\n\n# ‚ùÑÔ∏è Winter Olympics\n\n```{r}\n#| label: prep-winter-data\nwinter_olympics <- olympics |>\n  filter(season == \"Winter\")\n```\n\n## Column - Medals by sport and year {width=65%}\n\n### Row - Medals by sport {height=60%}\n\n```{r}\n#| title: Medals by sport\n#| fig-width: 8\n#| fig-height: 3\nwinter_olympics |>\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |>\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar(color = \"white\") +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 1500, 250),\n    labels = label_number(big.mark = \",\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.7, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n\n### Row - Medals by year {height=40%}\n\n::: {.card title=\"Medals by year\"}\nDue to World War II, no olympic games were held in 1940 and 1944.\n\n```{r}\n#| title: Medals by year\n#| fig-width: 11\n#| fig-height: 2\nwinter_olympics |>\n  count(year, medal) |>\n  ggplot(aes(x = year, y = n, fill = medal)) +\n  geom_line(aes(color = medal), linewidth = 0.8) +\n  geom_point(size = 2, color = \"white\", shape = \"circle filled\") +\n  guides(\n    color = guide_legend(reverse = TRUE),\n    fill = guide_legend(reverse = TRUE)\n  ) +\n  scale_color_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +  \n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\",\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.2, 0.8),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n:::\n\n## Column - Medals by country {width=35%}\n\n### Row - Value boxes {height=30%}\n\n```{r}\n#| label: wint-calculate-most-medals\nwinter_most_golds <- winter_olympics |>\n  filter(medal == \"Gold\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nwinter_most_silvers <- winter_olympics |>\n  filter(medal == \"Silver\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nwinter_most_bronzes <- winter_olympics |>\n  filter(medal == \"Bronze\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n```\n\n::: {.valuebox icon=\"award-fill\" color=\"#d4af37\"}\nMost golds: \n\n`{r} winter_most_golds$n`\n\n`{r} winter_most_golds$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#c0c0c0\"}\nMost silvers: \n\n`{r} winter_most_silvers$n`\n\n`{r} winter_most_silvers$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#cd7f32\"}\nMost bronzes: \n\n`{r} winter_most_bronzes$n`\n\n`{r} winter_most_bronzes$team`\n:::\n\n### Row - Tabsets of tables {height=70% .tabset}\n\n::: {.card title=\"Top 30 total medals\"}\nTeams sorted in descending order of total medals.\n\n```{r}\nwinter_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(desc(total), team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n```\n:::\n\n::: {.card title=\"Bottom 30 total medals\"}\nTeams sorted in ascending order of total medals.\n\n```{r}\n#| title: Bottom 30 total medals\nwinter_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(total, team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n```\n:::\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| message: false\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(scales)\n```\n\n```{r}\n#| label: load-data\n#| message: false\nolympics_full <- read_csv(\"../data/olympics.csv\")\n```\n\n```{r}\n#| label: prep-data\nolympics <- olympics_full |>\n  filter(!is.na(medal)) |>\n  separate_wider_delim(cols = team, names = c(\"team\", \"suffix\"), delim = \"-\", too_many = \"merge\", too_few = \"align_start\") |>\n  select(-suffix) |>\n  mutate(medal = fct_relevel(medal, \"Bronze\", \"Silver\", \"Gold\"))\n```\n\n# üåû Summer Olympics\n\n```{r}\n#| label: prep-summmer-data\nsummer_olympics <- olympics |>\n  filter(season == \"Summer\")\n```\n\n## Column - Medals by sport and year {width=65%}\n\n### Row - Medals by sport {height=60%}\n\n```{r}\n#| title: Medals by sport\n#| fig-width: 8\n#| fig-height: 3\nsummer_olympics |>\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |>\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar(color = \"white\") +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 7000, 1000),\n    labels = label_number(big.mark = \",\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n\n### Row - Medals by year {height=40%}\n\n::: {.card title=\"Medals by year\"}\nDue to World War II, no olympic games were held in 1940 and 1944.\n\n```{r}\n#| title: Medals by year\n#| fig-width: 11\n#| fig-height: 2\nsummer_olympics |>\n  count(year, medal) |>\n  ggplot(aes(x = year, y = n, fill = medal)) +\n  geom_line(aes(color = medal), linewidth = 0.8) +\n  geom_point(size = 2, color = \"white\", shape = \"circle filled\") +\n  guides(\n    color = guide_legend(reverse = TRUE),\n    fill = guide_legend(reverse = TRUE)\n  ) +\n  scale_color_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +  \n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\",\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n:::\n\n## Column - Medals by country {width=35%}\n\n### Row - Value boxes {height=30%}\n\n```{r}\n#| label: summer-calculate-most-medals\nsummer_most_golds <- summer_olympics |>\n  filter(medal == \"Gold\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nsummer_most_silvers <- summer_olympics |>\n  filter(medal == \"Silver\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nsummer_most_bronzes <- summer_olympics |>\n  filter(medal == \"Bronze\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n```\n\n::: {.valuebox icon=\"award-fill\" color=\"#d4af37\"}\nMost golds: \n\n`{r} summer_most_golds$n`\n\n`{r} summer_most_golds$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#c0c0c0\"}\nMost silvers: \n\n`{r} summer_most_silvers$n`\n\n`{r} summer_most_silvers$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#cd7f32\"}\nMost bronzes: \n\n`{r} summer_most_bronzes$n`\n\n`{r} summer_most_bronzes$team`\n:::\n\n### Row - Tabsets of tables {height=70% .tabset}\n\n::: {.card title=\"Top 30 total medals\"}\nTeams sorted in descending order of total medals.\n\n```{r}\nsummer_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(desc(total), team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n```\n:::\n\n::: {.card title=\"Bottom 30 total medals\"}\nTeams sorted in ascending order of total medals.\n\n```{r}\n#| title: Bottom 30 total medals\nsummer_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(total, team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n```\n:::\n\n# ‚ùÑÔ∏è Winter Olympics\n\n```{r}\n#| label: prep-winter-data\nwinter_olympics <- olympics |>\n  filter(season == \"Winter\")\n```\n\n## Column - Medals by sport and year {width=65%}\n\n### Row - Medals by sport {height=60%}\n\n```{r}\n#| title: Medals by sport\n#| fig-width: 8\n#| fig-height: 3\nwinter_olympics |>\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |>\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar(color = \"white\") +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 1500, 250),\n    labels = label_number(big.mark = \",\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.7, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n\n### Row - Medals by year {height=40%}\n\n::: {.card title=\"Medals by year\"}\nDue to World War II, no olympic games were held in 1940 and 1944.\n\n```{r}\n#| title: Medals by year\n#| fig-width: 11\n#| fig-height: 2\nwinter_olympics |>\n  count(year, medal) |>\n  ggplot(aes(x = year, y = n, fill = medal)) +\n  geom_line(aes(color = medal), linewidth = 0.8) +\n  geom_point(size = 2, color = \"white\", shape = \"circle filled\") +\n  guides(\n    color = guide_legend(reverse = TRUE),\n    fill = guide_legend(reverse = TRUE)\n  ) +\n  scale_color_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_fill_manual(values = c(\n    \"Gold\" = \"#d4af37\",\n    \"Silver\" = \"#c0c0c0\",\n    \"Bronze\" = \"#cd7f32\"\n    )\n  ) +  \n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\",\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.2, 0.8),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n```\n:::\n\n## Column - Medals by country {width=35%}\n\n### Row - Value boxes {height=30%}\n\n```{r}\n#| label: wint-calculate-most-medals\nwinter_most_golds <- winter_olympics |>\n  filter(medal == \"Gold\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nwinter_most_silvers <- winter_olympics |>\n  filter(medal == \"Silver\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n\nwinter_most_bronzes <- winter_olympics |>\n  filter(medal == \"Bronze\") |>\n  count(team, sort = TRUE) |>\n  slice_head(n = 1)\n```\n\n::: {.valuebox icon=\"award-fill\" color=\"#d4af37\"}\nMost golds: \n\n`{r} winter_most_golds$n`\n\n`{r} winter_most_golds$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#c0c0c0\"}\nMost silvers: \n\n`{r} winter_most_silvers$n`\n\n`{r} winter_most_silvers$team`\n:::\n\n::: {.valuebox icon=\"award-fill\" color=\"#cd7f32\"}\nMost bronzes: \n\n`{r} winter_most_bronzes$n`\n\n`{r} winter_most_bronzes$team`\n:::\n\n### Row - Tabsets of tables {height=70% .tabset}\n\n::: {.card title=\"Top 30 total medals\"}\nTeams sorted in descending order of total medals.\n\n```{r}\nwinter_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(desc(total), team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n```\n:::\n\n::: {.card title=\"Bottom 30 total medals\"}\nTeams sorted in ascending order of total medals.\n\n```{r}\n#| title: Bottom 30 total medals\nwinter_olympics |>\n  count(team, medal) |>\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>\n  mutate(total = Bronze + Gold + Silver) |>\n  arrange(total, team) |>\n  slice_head(n = 30) |>\n  select(Team = team, Gold, Silver, Bronze) |>\n  gt() |>\n  cols_align(align = \"left\", columns = Team) |>\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n```\n:::\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"olympicdash-r-3-answers.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","page-layout":"custom","title":"Olympic Games","logo":"../images/olympics-logo.svg","orientation":"columns","nav-buttons":["github"],"github":"https://github.com/posit-conf-2024/olympicdash","theme":["sketchy","style/olympicdash.scss"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}